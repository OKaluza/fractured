//Novabs: z = abs(z - (relax * (z^p - 1)) / (p * z^(p-1))) + c
//z(n+1) = 
@znext = expression(abs(z - (relax*(z^p-1)) / (p*z^(p-1))) + c);
//Power (p)
@p = real(3);
//Relax
@relax = complex(1,0);
//Converge
@converge = real(0.00001);
//Bailout Function
@bailtest = bailout_function(norm);

//Reset, called once for each pixel before iterating
reset:
{
  //Nova init
  if (!julia && !perturb) z = C(1);
}

//Convergent bailout
converged:
{
  return bailtest(z-z_1) < converge;
}