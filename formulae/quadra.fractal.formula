//z(n+1) =
@znext = expression((z^p + (c-a)*z - c) / (z^(p-1) + c - b));
//Bailout
@bailout = real(100);
//Converge Bailout
@bailoutc = real(0.00005);
//Bailout Function
@bailfunc = bailout_function(norm);
//Power (p)
@p = real(2);
@a = complex(1,0);
@b = complex(1,0);

//Check bailout conditions and return true if bailed out
bool bailed()
{
  //Divergent bailout
  if (bailfunc(z) > bailout) return true;
  //Convergent bailout
  if (bailfunc(z - C(1)) <= bailoutc)
  {
    converged = true;
    return true;
  }
  return false;
}
