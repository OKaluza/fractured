//Hot & Cold
// 2 colors - on each orbit, the closer we are to 0, the more hot,
// the closer we are to bailout, the more cold. Compute an average 
// over all iterations 

//Bailout
@bailout = real(4);
//Far distance
@fardist = real(1.5);
//Close distance
@closedist = real(1.0);
//Hot colour
@hotcolour = rgba(255, 120, 5, 1.0);
//Cold colour
@coldcolour = rgba(127, 200, 250, 1.0);

int @closecalls = 0;
int @farcalls = 0;

calc:
  real dist = norm(z);
  if (dist < @closedist)
    @closecalls++;
  else if (@bailout - dist < @fardist)
    @farcalls++;

result:
  //return gradient(repeat * real(@closecalls) / real(count));
  rgba hcolour = @hotcolour * (real(@closecalls)/real(count));
  rgba ccolour = @coldcolour * (real(@farcalls)/real(count));
  colour = hcolour + ccolour;
