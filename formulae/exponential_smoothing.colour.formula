//Exponential smoothing
//Divergent
@:diverge = bool(true);
//Convergent
@:converge = bool(false);
//z(n-1) - z(n)
@:use_z_old = bool(false);

real :sum = 0.0;
real :csum = 0.0;

calc:
  complex :zval = z;
  if (:use_z_old)
    :zval = z_1 - z;
  
  if (:diverge)
    :sum += exp(-cabs(:zval));

  if (:converge)
    :csum += exp(-1.0/cabs(:zval));  

result:
  real mu = :sum;
  if (!:diverge || :converge && converged)
    mu =  :csum;
    
  colour = gradient(repeat * mu / real(maxiterations));

