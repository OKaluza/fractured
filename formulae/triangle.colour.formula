//Triangle Inequality
//Palette repeat
@repeat = real(1);
//Power
@power = expression(p);
//Bailout
@bailout = expression(escape);
//Log function
@lfn = real_function(log);

real @sum, @sum2, @ac;

reset:
  @sum = @sum2 = 0.0;
  @ac = cabs(c);

calc:
  @sum2 = @sum;
  if (count > 1)
  {
    real az2 = cabs(z - c);
    real lowbound = abs(az2 - @ac);
    @sum += (cabs(z) - lowbound) / (az2 + @ac - lowbound);
  }

result:
  real il = 1.0/@lfn(@power);  //Inverse log of (power)
  real lp = @lfn(@lfn(@bailout)/2.0);
  @sum /= R(count);
  @sum2 /= R(count-1);
  real f = il * (lp - @lfn(@lfn(cabs(z))));
  real idx = @sum2 + (@sum - @sum2) * (f+1.0);
  colour = gradient(@repeat * idx);
