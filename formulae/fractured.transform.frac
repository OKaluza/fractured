@z_fn = complex_function(ident);  //Z function
@re_fn = real_function(abs);  //Real function
@im_fn = real_function(abs);  //Imag function
@induct_on = list('|z(n-1)|z(n-2)'); //Induct on
@induct = complex(1,0);    //Induction
@N = int(1);  //N (apply every)

void transform()
{
  //Apply every N steps
  if (N > 1 && mod(real(count),real(N)) != 0.0) return;
  
  //Apply induction, on z(n-1) (*) or z(n-2) (@)
  if (induct_on > 0)
  {
    if (induct_on == 1)
      z += mul(zold, induct);
    else if (induct_on == 2)
      z += mul(zoldold, induct);
  }

  //Apply functions to real and/or imaginary components
  z = z_fn(z);
  z = complex(re_fn(z.x), im_fn(z.y));
}

