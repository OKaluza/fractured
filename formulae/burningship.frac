@bailout = real(4);   //Bailout
@bailfunc = bailout_function(norm);   //Bailout Function
@power = real(2);    //Power

//Init, called once at start of render
void init()
{
}

//Reset, called once for each pixel before iterating
void reset()
{
}

//Get next z(n+1), performs an iteration step
void runstep()
{
  if (power == 2.0)
    //(default mandelbrot)
    z = abs(mul(z,z) + c);
  else
    z = abs(cpow(z, power) + c);
}

//Check bailout condition and return true if bailed out
bool bailed()
{
  if (bailfunc(z) > bailout) return true;
  return false;
}

