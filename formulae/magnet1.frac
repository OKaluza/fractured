@bailout = real(100);   //Bailout
@bailoutc = real(0.00005);   //Converge Bailout
//power = complex(2);    //Power

//Init, called once at start of render
void init()
{
}

//Reset, called once for each pixel before iterating
void reset()
{
}

//Get next z(n+1), performs an iteration step
void runstep()
{
  //Magnet: z = sqr( (z^2 + pixel - 1) / (2*z + pixel - 2) )
  z = div(mul(z,z) + (c-C(1.0)), 2.0*z + (c-C(2.0)));
  z = mul(z,z);
}

//Check bailout conditions and return true if bailed out
bool bailed()
{
  //Divergent bailout
  if (norm(z) > bailout) return true;
  //Convergent bailout
  if (norm(z - C(1.0)) <= bailoutc) 
  {
    converged = true;
    return true;
  }
  return false;
}

