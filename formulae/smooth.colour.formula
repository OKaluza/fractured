//Smooth colouring algorithm
//Palette repeat
@:repeat = real(1);
//Power
@:power = expression(p);
//Bailout
@:bailout = expression(escape);

//Inverse log of (power)
real :il = 1.0/log(:power);
real :lp = log(log(@:bailout));

result:
  real mu = real(count) + (:lp - log(log(cabs(z)))) * :il;
  colour = gradient(:repeat * mu / real(limit));

