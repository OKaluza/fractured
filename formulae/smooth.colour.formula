//Smooth colouring algorithm
//Palette repeat
@repeat = real(1);
//Power
@power = expression(p);
//Bailout
@bailout = expression(escape);
//Log function
@lfn = real_function(log);

//Inverse log of (power)
real @il = 1.0/@lfn(@power);
real @lp = @lfn(@lfn(@bailout));

result:
  real mu = real(count) + (@lp - @lfn(@lfn(cabs(z)))) * @il;
  //Colour from gradient 
  colour = gradient(@repeat * mu / real(limit));
