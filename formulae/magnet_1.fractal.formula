//Magnet: z = ((z^b + c - 1) / (b*z + c - 2))^a
//z(n+1) = 
@znext = expression(((z^q+c-1) / (q*z+c-2))^p);
//Bailout
@bailout = real(100);
//Converge Bailout
@bailoutc = real(0.00005);
//Bailout Function
@bailfunc = bailout_function(norm);
//Power (p)
@p = real(2);
//Power (q)
@q = real(2);

//Check bailout conditions and return true if bailed out
bool bailed()
{
  //Divergent bailout
  if (bailfunc(z) > bailout) return true;
  //Convergent bailout
  if (bailfunc(z - C(1)) <= bailoutc) 
  {
    converged = true;
    return true;
  }
  return false;
}

