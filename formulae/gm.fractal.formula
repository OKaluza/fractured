@znext = expression(a*z + (2*(1-a)*z^power) / (1+z) + c); //z(n+1) = 
@bailout = real(100);   //Bailout
@bailoutc = real(0.00005);   //Converge Bailout
@bailfunc = bailout_function(norm);   //Bailout Function
@power = real(2);    //Power
@a = complex(1,0); //a

//Get next z(n+1), performs an iteration step
void runstep()
{
  //Derived from Gumowski-Mira eqn f(x) = ax + 2(1-a)x^2 / (1 + x)
  z = znext;
}

//Check bailout conditions and return true if bailed out
bool bailed()
{
  //Divergent bailout
  if (bailfunc(z) > bailout) return true;
  //Convergent bailout
  if (bailfunc(z - C(1)) <= bailoutc)
  {
    converged = true;
    return true;
  }
  return false;
}

