//Exponential smoothing
@~diverge = bool(true);    //Divergent
@~converge = bool(false);  //Convergent
@~use_zold = bool(false);   //z(n-1) - z(n)

real ~sum = 0.0;
real ~csum = 0.0;

void ~reset()
{
  ~sum = 0.0;
  ~csum = 0.0;  
}

void ~calc()
{
  if (~diverge)
  {
    if (~use_zold)
      ~sum += exp(-cabs(zold - z));
    else
      ~sum += exp(-cabs(z));
  }

  if (~converge)
  {
    if (~use_zold)
      ~csum += exp(-1.0/cabs(zold - z));  
    else
      ~csum += exp(-1.0/cabs(z));  
  }
}

rgba ~result(in real repeat)
{
  real mu;
  if (!~diverge || ~converge && converged)
    mu =  ~csum;
  else 
    mu = ~sum;
    
  return gradient(repeat * mu / real(maxiterations));
}

