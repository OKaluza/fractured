//z(n+1) = 
@znext = expression(z^p + z*(pixel-1) - pixel);
//Power (p)
@p = real(3);
//Escape
@escape = real(4);   
//Bailout Function
@bailfunc = bailout_function(norm);

//Reset, called once for each pixel before iterating
reset:
{
  //Reset fractal, standard doesn't work with this algorithm
  z = pixel;
  if (julia)
    z = selected;
  else
    if (perturb) z = C(0);
}

