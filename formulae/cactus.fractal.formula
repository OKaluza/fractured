//z(n+1) = 
@znext = expression(z^power + z*(pixel-1) - pixel);
//Bailout
@bailout = real(4);   
//Bailout Function
@bailfunc = bailout_function(norm);
//Power
@power = real(3);

//Reset, called once for each pixel before iterating
void reset()
{
  //Reset fractal, standard doesn't work with this algorithm
  z = pixel;
  if (julia)
    z = selected;
  else
    if (perturb) z = C(0);
}
